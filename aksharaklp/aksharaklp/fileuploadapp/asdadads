


class MyappDocument(models.Model):
    id = models.IntegerField(primary_key=True)
    docfile = models.CharField(max_length=100)
    class Meta:
        managed = False
        db_table = 'myapp_document'

class TbBlock(models.Model):
    id = models.IntegerField(primary_key=True)
    block_name = models.CharField(max_length=120, blank=True)
    district = models.ForeignKey('TbDistrict')
    class Meta:
        managed = False
        db_table = 'tb_block'

class TbCluster(models.Model):
    id = models.IntegerField(primary_key=True)
    cluster_name = models.CharField(max_length=150, blank=True)
    block = models.ForeignKey(TbBlock)
    class Meta:
        managed = False
        db_table = 'tb_cluster'

class TbDistrict(models.Model):
    id = models.IntegerField(primary_key=True)
    district_name = models.CharField(max_length=50, blank=True)
    class Meta:
        managed = False
        db_table = 'tb_district'

class TbFc(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=120)
    class Meta:
        managed = False
        db_table = 'tb_fc'

class TbPerformanceFeedback(models.Model):
    id = models.IntegerField(primary_key=True)
    visit = models.ForeignKey('TbVisitDetails', blank=True, null=True)
    parents_teachers = models.SmallIntegerField(blank=True, null=True)
    parents_parents = models.SmallIntegerField(blank=True, null=True)
    parents_community = models.SmallIntegerField(blank=True, null=True)
    sdmc_teachers = models.SmallIntegerField(blank=True, null=True)
    sdmc_parents = models.SmallIntegerField(blank=True, null=True)
    sdmc_community = models.SmallIntegerField(blank=True, null=True)
    community_teachers = models.SmallIntegerField(blank=True, null=True)
    community_parents = models.SmallIntegerField(blank=True, null=True)
    community_community = models.SmallIntegerField(blank=True, null=True)
    teachers_teachers = models.SmallIntegerField(blank=True, null=True)
    teachers_parents = models.SmallIntegerField(blank=True, null=True)
    teachers_community = models.SmallIntegerField(blank=True, null=True)
    addl_comments_fs = models.CharField(max_length=750, blank=True)
    class Meta:
        managed = False
        db_table = 'tb_performance_feedback'

class TbRequirementsFeedback(models.Model):
    id = models.IntegerField(primary_key=True)
    visit = models.ForeignKey('TbVisitDetails', blank=True, null=True)
    teacher_tlmsufficient = models.SmallIntegerField(blank=True, null=True)
    teacher_work_overload = models.SmallIntegerField(blank=True, null=True)
    teacher_need_training = models.SmallIntegerField(blank=True, null=True)
    teacher_relationship_hm = models.SmallIntegerField(blank=True, null=True)
    parents_good_school = models.SmallIntegerField(blank=True, null=True)
    parents_teachers_regular = models.SmallIntegerField(blank=True, null=True)
    parents_attention_to_children = models.SmallIntegerField(blank=True, null=True)
    parents_food_served = models.SmallIntegerField(blank=True, null=True)
    community_qtm_to_teach = models.SmallIntegerField(blank=True, null=True)
    community_str = models.SmallIntegerField(blank=True, null=True)
    community_govt_involved = models.SmallIntegerField(blank=True, null=True)
    community_good_infra = models.SmallIntegerField(blank=True, null=True)
    teacher_addl_comments = models.CharField(max_length=750, blank=True)
    parents_addl_comments = models.CharField(max_length=750, blank=True)
    community_addl_comments = models.CharField(max_length=750, blank=True)
    class Meta:
        managed = False
        db_table = 'tb_requirements_feedback'

class TbSchool(models.Model):
    id = models.IntegerField(primary_key=True)
    school_name = models.CharField(max_length=500, blank=True)
    cluster = models.ForeignKey(TbCluster)
    klp_id = models.DecimalField(max_digits=15, decimal_places=0, blank=True, null=True)
    class Meta:
        managed = False
        db_table = 'tb_school'

class TbVisitDetails(models.Model):
    id = models.IntegerField(primary_key=True)
    month = models.SmallIntegerField(blank=True, null=True)
    day = models.SmallIntegerField(blank=True, null=True)
    year = models.IntegerField(blank=True, null=True)
    fc = models.ForeignKey(TbFc)
    other_visit = models.CharField(max_length=500, blank=True)
    school = models.ForeignKey(TbSchool)
    class Meta:
        managed = False
        db_table = 'tb_visit_details'
